// Generated by Selenium IDE
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.HashMap;
import java.util.Map;


public class CardmarketNavTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {

    System.setProperty("webdriver.gecko.driver","C:\\Users\\Admin\\Coding_Projects\\Selenium\\Selenium Intro\\Gecko\\geckodriver.exe");

    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.manage().deleteAllCookies(); // Deletes all the cookies
    driver.quit();
  }
  @Test
  public void cardmarketNav() {
    driver.get("https://www.cardmarket.com/en/Magic");
    driver.manage().window().setSize(new Dimension(1936, 1056));
    {
      WebDriverWait wait = new WebDriverWait(driver, 300);
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("ProductSearchInput")));
    }
    driver.findElement(By.id("ProductSearchInput")).sendKeys("Smite the");
    {
      WebDriverWait wait = new WebDriverWait(driver, 300);
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".autocomplete-link:nth-child(1) .expansionIcon")));
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".autocomplete-link:nth-child(1) .expansionIcon"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".autocomplete-link:nth-child(6) .expansionIcon"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.cssSelector(".autocomplete-link:nth-child(6) .text-truncate")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 300);
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".expansionIcon")));
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".expansionIcon"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.linkText("Show Versions (6)")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 300);
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".card-column:nth-child(6) .text-left")));
    }
    driver.findElement(By.cssSelector(".card-column:nth-child(6) .text-left")).click();
    {
      WebElement element = driver.findElement(By.cssSelector("#articleRow386056658 .col-product .d-flex > .icon"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".fonticon-location"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.cssSelector(".h5")).click();
    driver.findElement(By.cssSelector(".cursor-pointer")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 300);
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("#articleFilterSellerLocation .filter-box > .custom-control > .d-inline-flex")));
    }
    driver.findElement(By.cssSelector("#articleFilterSellerLocation .filter-box > .custom-control > .d-inline-flex")).click();
    driver.findElement(By.cssSelector("#articleFilterProductLanguage .custom-control:nth-child(1) > .d-inline-flex")).click();
    driver.findElement(By.name("apply")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 300);
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".col-6:nth-child(13)")));
    }
    driver.findElement(By.cssSelector(".col-6:nth-child(13)")).click();
    Assert.assertTrue(driver.findElement(By.cssSelector("#articleRow397141158 > .col-offer .font-weight-bold")).getText().equals("0,02 â‚¬"));
  }
}
